# Generated by Django 5.1.7 on 2025-03-11 15:27

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("common", "0001_initial"),
        ("inventory", "0002_initial"),
        ("management", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AddField(
            model_name="inventory",
            name="alert_threshold",
            field=models.IntegerField(
                default=10,
                help_text="Percentage variance to trigger stock alerts",
                verbose_name="Alert Threshold",
            ),
        ),
        migrations.AddField(
            model_name="inventory",
            name="batch_tracking_enabled",
            field=models.BooleanField(
                default=False,
                help_text="Enable batch/lot number tracking for items",
                verbose_name="Batch Tracking",
            ),
        ),
        migrations.AddField(
            model_name="inventory",
            name="expiration_threshold",
            field=models.IntegerField(
                default=30,
                help_text="Days before expiry to trigger alerts",
                verbose_name="Expiration Alert Window",
            ),
        ),
        migrations.AddField(
            model_name="inventory",
            name="external_system_id",
            field=models.CharField(
                blank=True,
                help_text="Identifier in external ERP/WMS systems",
                max_length=200,
                null=True,
                verbose_name="External ID",
            ),
        ),
        migrations.AddField(
            model_name="inventory",
            name="forecast_method",
            field=models.CharField(
                choices=[
                    ("SA", "Simple Average"),
                    ("MA", "Moving Average"),
                    ("ES", "Exponential Smoothing"),
                ],
                default="SA",
                help_text="Algorithm for demand prediction",
                max_length=2,
                verbose_name="Forecast Method",
            ),
        ),
        migrations.AddField(
            model_name="inventory",
            name="holding_cost_per_unit",
            field=models.DecimalField(
                decimal_places=2,
                default=0.0,
                help_text="Annual storage cost per unit",
                max_digits=10,
                verbose_name="Holding Cost",
            ),
        ),
        migrations.AddField(
            model_name="inventory",
            name="internal_processing_time",
            field=models.IntegerField(
                default=1,
                help_text="Days needed for internal order processing",
                verbose_name="Internal Processing Time",
            ),
        ),
        migrations.AddField(
            model_name="inventory",
            name="near_expiry_policy",
            field=models.CharField(
                choices=[
                    ("DISCOUNT", "Sell at Discount"),
                    ("DONATE", "Donate to Charity"),
                    ("DESTROY", "Destroy Immediately"),
                    ("RETURN", "Return to Supplier"),
                ],
                default="DISCOUNT",
                help_text="Action plan for items nearing expiration",
                max_length=20,
                verbose_name="Near-Expiry Action",
            ),
        ),
        migrations.AddField(
            model_name="inventory",
            name="ordering_cost",
            field=models.DecimalField(
                decimal_places=2,
                default=0.0,
                help_text="Fixed cost per replenishment order",
                max_digits=10,
                verbose_name="Ordering Cost",
            ),
        ),
        migrations.AddField(
            model_name="inventory",
            name="reorder_strategy",
            field=models.CharField(
                choices=[
                    ("FQ", "Fixed Quantity"),
                    ("FI", "Fixed Interval"),
                    ("DY", "Demand-Based"),
                ],
                default="FQ",
                help_text="Methodology for inventory replenishment",
                max_length=2,
                verbose_name="Replenishment Strategy",
            ),
        ),
        migrations.AddField(
            model_name="inventory",
            name="safety_stock_level",
            field=models.IntegerField(
                default=0,
                help_text="Buffer stock for demand/supply fluctuations",
                verbose_name="Safety Stock",
            ),
        ),
        migrations.AddField(
            model_name="inventory",
            name="stockout_cost",
            field=models.DecimalField(
                decimal_places=2,
                default=0.0,
                help_text="Estimated cost per unit of stockout",
                max_digits=10,
                verbose_name="Stockout Cost",
            ),
        ),
        migrations.AddField(
            model_name="inventory",
            name="supplier_lead_time",
            field=models.IntegerField(
                default=0,
                help_text="Average replenishment duration (days)",
                verbose_name="Supplier Lead Time",
            ),
        ),
        migrations.AddField(
            model_name="inventory",
            name="supplier_reliability_score",
            field=models.DecimalField(
                decimal_places=2,
                default=100.0,
                help_text="Performance rating (0-100 scale)",
                max_digits=5,
                verbose_name="Supplier Score",
            ),
        ),
        migrations.AddField(
            model_name="inventory",
            name="updated_by",
            field=models.ForeignKey(
                blank=True,
                help_text="User who last modified policies",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to=settings.AUTH_USER_MODEL,
                verbose_name="Last Updated By",
            ),
        ),
        migrations.AlterField(
            model_name="inventory",
            name="automate_reorder",
            field=models.BooleanField(
                default=False,
                help_text="Enable automatic purchase orders at reorder point",
                verbose_name="Auto-Replenish",
            ),
        ),
        migrations.AlterField(
            model_name="inventory",
            name="category",
            field=models.ForeignKey(
                blank=True,
                help_text="Hierarchical grouping for inventory items",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="inventories",
                to="inventory.inventorycategory",
                verbose_name="Classification Category",
            ),
        ),
        migrations.AlterField(
            model_name="inventory",
            name="created_at",
            field=models.DateTimeField(auto_now_add=True, verbose_name="Creation Date"),
        ),
        migrations.AlterField(
            model_name="inventory",
            name="created_by",
            field=models.ForeignKey(
                editable=False,
                on_delete=django.db.models.deletion.CASCADE,
                related_name="inventories",
                to=settings.AUTH_USER_MODEL,
                verbose_name="Created By",
            ),
        ),
        migrations.AlterField(
            model_name="inventory",
            name="description",
            field=models.TextField(
                blank=True,
                help_text="Detailed operational context and usage notes",
                null=True,
                verbose_name="Description",
            ),
        ),
        migrations.AlterField(
            model_name="inventory",
            name="expiration_policy",
            field=models.CharField(
                choices=[("0", "Dispose of Stock"), ("1", "Return to Manufacturer")],
                default="0",
                help_text="Procedure for expired inventory items",
                max_length=200,
                verbose_name="Expiration Handling",
            ),
        ),
        migrations.AlterField(
            model_name="inventory",
            name="i_type",
            field=models.ForeignKey(
                help_text="Classification based on operational purpose",
                limit_choices_to={"which_model": "inventory"},
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="common.typeof",
                verbose_name="Inventory Type",
            ),
        ),
        migrations.AlterField(
            model_name="inventory",
            name="minimum_stock_level",
            field=models.IntegerField(
                default=0,
                help_text="Trigger point for low stock alerts (units)",
                verbose_name="Minimum Stock Level",
            ),
        ),
        migrations.AlterField(
            model_name="inventory",
            name="name",
            field=models.CharField(
                help_text="Unique identifier for this inventory system",
                max_length=255,
                verbose_name="Inventory Name",
            ),
        ),
        migrations.AlterField(
            model_name="inventory",
            name="profile",
            field=models.ForeignKey(
                help_text="Organization responsible for this inventory",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="inventories",
                to="management.companyprofile",
                verbose_name="Owning Organization",
            ),
        ),
        migrations.AlterField(
            model_name="inventory",
            name="re_order_point",
            field=models.IntegerField(
                default=10,
                help_text="Inventory level triggering replenishment (units)",
                verbose_name="Reorder Point",
            ),
        ),
        migrations.AlterField(
            model_name="inventory",
            name="re_order_quantity",
            field=models.IntegerField(
                default=200,
                help_text="Standard quantity for automated replenishment",
                verbose_name="Reorder Quantity",
            ),
        ),
        migrations.AlterField(
            model_name="inventory",
            name="recall_policy",
            field=models.CharField(
                choices=[
                    ("0", "Remove from Stock"),
                    ("1", "Notify Customers"),
                    ("3", "Replace Item"),
                    ("4", "Destroy Item"),
                    ("5", "Repair Item"),
                ],
                default="0",
                help_text="Protocol for product recall scenarios",
                max_length=200,
                verbose_name="Recall Procedure",
            ),
        ),
        migrations.AlterField(
            model_name="inventory",
            name="unit",
            field=models.ForeignKey(
                blank=True,
                help_text="Standard measurement system for stock items (e.g., pieces, kg)",
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="inventories",
                to="common.unit",
                verbose_name="Measurement Unit",
            ),
        ),
        migrations.AlterField(
            model_name="inventory",
            name="updated_at",
            field=models.DateTimeField(auto_now=True, verbose_name="Last Updated"),
        ),
    ]
