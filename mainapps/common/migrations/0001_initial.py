# Generated by Django 5.1.7 on 2025-03-11 07:23

import django.db.models.deletion
import mptt.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("contenttypes", "0002_remove_content_type_name"),
    ]

    operations = [
        migrations.CreateModel(
            name="Attribute",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name="AttributeStore",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "object_id",
                    models.PositiveIntegerField(
                        help_text="The ID of the linked object.",
                        verbose_name="Object ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("attributes", models.JSONField(default=dict)),
                (
                    "content_type",
                    models.ForeignKey(
                        help_text="The content type of the linked object.",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="contenttypes.contenttype",
                        verbose_name="Content Type",
                    ),
                ),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Unit",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255, verbose_name="Unit name")),
                (
                    "abbreviated_name",
                    models.CharField(
                        blank=True,
                        help_text="What is the short form of the unit",
                        max_length=4,
                        null=True,
                    ),
                ),
                (
                    "attribute",
                    models.ForeignKey(
                        help_text="What attribute does the unit measure?",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="common.attribute",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TypeOf",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        help_text="It must be unique",
                        max_length=200,
                        verbose_name="Type",
                    ),
                ),
                (
                    "which_model",
                    models.CharField(
                        choices=[
                            ("inventory", "Inventory"),
                            ("stock_item", "Stock item"),
                            ("company", "Company"),
                            ("policy", "Policy"),
                            ("industry", "Industry"),
                        ],
                        max_length=30,
                    ),
                ),
                ("slug", models.SlugField(editable=False, max_length=230)),
                ("is_active", models.BooleanField(default=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("lft", models.PositiveIntegerField(editable=False)),
                ("rght", models.PositiveIntegerField(editable=False)),
                ("tree_id", models.PositiveIntegerField(db_index=True, editable=False)),
                ("level", models.PositiveIntegerField(editable=False)),
                (
                    "parent",
                    mptt.fields.TreeForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="children",
                        to="common.typeof",
                    ),
                ),
            ],
            options={
                "verbose_name_plural": "Types of Instances",
                "ordering": ["name"],
                "constraints": [
                    models.UniqueConstraint(
                        fields=("name", "which_model"),
                        name="unique_type_name_which_model",
                    )
                ],
            },
        ),
        migrations.CreateModel(
            name="Value",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("value", models.CharField(max_length=255)),
                (
                    "attribute",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="common.attribute",
                    ),
                ),
            ],
            options={
                "unique_together": {("attribute", "value")},
            },
        ),
    ]
