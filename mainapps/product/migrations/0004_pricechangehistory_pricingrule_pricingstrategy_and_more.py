# Generated by Django 5.2 on 2025-04-18 22:40

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('common', '0001_initial'),
        ('management', '0006_alter_staffroleassignment_role'),
        ('orders', '0015_alter_salesorder_customer_reference'),
        ('product', '0003_product_unit'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PriceChangeHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Previous Price')),
                ('new_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='New Price')),
                ('change_type', models.CharField(choices=[('auto', 'Automatic'), ('manual', 'Manual'), ('override', 'Override')], max_length=20, verbose_name='Change Type')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20, verbose_name='Approval Status')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Timestamp')),
                ('reason', models.TextField(blank=True, verbose_name='Change Reason')),
            ],
            options={
                'verbose_name': 'Price Change History',
                'verbose_name_plural': 'Price Change Histories',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='PricingRule',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rule_type', models.CharField(choices=[('BATCH', 'Stock Batch Override'), ('CUSTOMER', 'Customer Specific'), ('PROMO', 'Time-Limited Promotion'), ('VOLUME', 'Volume Discount')], max_length=20)),
                ('value', models.DecimalField(decimal_places=2, max_digits=10)),
                ('start_date', models.DateTimeField(blank=True, null=True)),
                ('end_date', models.DateTimeField(blank=True, null=True)),
                ('min_quantity', models.PositiveIntegerField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='PricingStrategy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('strategy', models.CharField(choices=[('margin', 'Cost-Plus Margin'), ('multiplier', 'Market Multiplier'), ('fixed', 'Fixed Price')], default='margin', max_length=20)),
                ('margin_percentage', models.DecimalField(blank=True, decimal_places=2, help_text='Markup percentage (e.g. 30 for 30% margin)', max_digits=5, null=True, verbose_name='Margin %')),
                ('market_multiplier', models.DecimalField(blank=True, decimal_places=2, help_text='Multiply cost price by this value', max_digits=5, null=True, verbose_name='Multiplier')),
                ('min_price', models.DecimalField(blank=True, decimal_places=2, help_text='Price floor for automatic calculations', max_digits=10, null=True, verbose_name='Minimum Price')),
                ('max_price', models.DecimalField(blank=True, decimal_places=2, help_text='Price ceiling for automatic calculations', max_digits=10, null=True, verbose_name='Maximum Price')),
            ],
            options={
                'verbose_name': 'Pricing Strategy',
                'verbose_name_plural': 'Pricing Strategies',
            },
        ),
        migrations.CreateModel(
            name='PurchasePriceHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('purchase_price', models.DecimalField(decimal_places=2, max_digits=10, verbose_name='Unit Cost')),
                ('effective_start', models.DateTimeField(auto_now_add=True, verbose_name='Effective Start')),
                ('effective_end', models.DateTimeField(blank=True, null=True, verbose_name='Effective End')),
            ],
            options={
                'verbose_name': 'Purchase Price History',
                'verbose_name_plural': 'Purchase Price Histories',
                'ordering': ['-effective_start'],
            },
        ),
        migrations.AlterModelOptions(
            name='product',
            options={'ordering': ['name'], 'verbose_name': 'Product', 'verbose_name_plural': 'Products'},
        ),
        migrations.AlterModelOptions(
            name='productattribute',
            options={'ordering': ['name'], 'verbose_name': 'Product Attribute', 'verbose_name_plural': 'Product Attributes'},
        ),
        migrations.AlterModelOptions(
            name='productattributelink',
            options={'ordering': ['order'], 'verbose_name': 'Product Attribute Link', 'verbose_name_plural': 'Product Attribute Links'},
        ),
        migrations.AlterModelOptions(
            name='productattributevalue',
            options={'ordering': ['attribute__name', 'value'], 'verbose_name': 'Attribute Value', 'verbose_name_plural': 'Attribute Values'},
        ),
        migrations.AlterModelOptions(
            name='productvariant',
            options={'ordering': ['product__name', 'variant_number'], 'verbose_name': 'Product Variant', 'verbose_name_plural': 'Product Variants'},
        ),
        migrations.AlterModelOptions(
            name='productvariantattribute',
            options={'verbose_name': 'Variant Attribute', 'verbose_name_plural': 'Variant Attributes'},
        ),
        migrations.RemoveField(
            model_name='productvariant',
            name='base_price',
        ),
        migrations.AlterField(
            model_name='product',
            name='attributes',
            field=models.ManyToManyField(related_name='products', through='product.ProductAttributeLink', to='product.productattribute', verbose_name='Attributes'),
        ),
        migrations.AlterField(
            model_name='product',
            name='base_price',
            field=models.DecimalField(decimal_places=2, help_text='Default selling price before modifiers', max_digits=10, verbose_name='Base Price'),
        ),
        migrations.AlterField(
            model_name='product',
            name='description',
            field=models.TextField(verbose_name='Description'),
        ),
        migrations.AlterField(
            model_name='product',
            name='is_template',
            field=models.BooleanField(default=True, help_text='Designates if this product is a template for variants', verbose_name='Is Template'),
        ),
        migrations.AlterField(
            model_name='product',
            name='name',
            field=models.CharField(max_length=255, verbose_name='Product Name'),
        ),
        migrations.AlterField(
            model_name='product',
            name='profile',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='products', to='management.companyprofile', verbose_name='Company Profile'),
        ),
        migrations.AlterField(
            model_name='product',
            name='unit',
            field=models.ForeignKey(blank=True, help_text='Required inventory unit (e.g. pieces, liters)', null=True, on_delete=django.db.models.deletion.PROTECT, to='common.unit', verbose_name='Unit of Measure'),
        ),
        migrations.AlterField(
            model_name='productattribute',
            name='name',
            field=models.CharField(help_text='Attribute name (e.g. Color, Size)', max_length=100),
        ),
        migrations.AlterField(
            model_name='productattribute',
            name='profile',
            field=models.ForeignKey(help_text='Required company profile', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='attributes', to='management.companyprofile'),
        ),
        migrations.AlterField(
            model_name='productattributelink',
            name='attribute',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='product_links', to='product.productattribute'),
        ),
        migrations.AlterField(
            model_name='productattributelink',
            name='default_modifier',
            field=models.DecimalField(decimal_places=2, default=0, help_text='Default price adjustment for this attribute', max_digits=10, verbose_name='Price Modifier'),
        ),
        migrations.AlterField(
            model_name='productattributelink',
            name='order',
            field=models.PositiveIntegerField(default=0, verbose_name='Ordering Priority'),
        ),
        migrations.AlterField(
            model_name='productattributelink',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attribute_links', to='product.product'),
        ),
        migrations.AlterField(
            model_name='productattributelink',
            name='required',
            field=models.BooleanField(default=True, help_text='Is this attribute required for variants?', verbose_name='Required'),
        ),
        migrations.AlterField(
            model_name='productattributevalue',
            name='value',
            field=models.CharField(help_text='Specific attribute value (e.g. Red, 42)', max_length=100),
        ),
        migrations.AlterField(
            model_name='productvariant',
            name='active',
            field=models.BooleanField(default=True, help_text='Available for sale', verbose_name='Active'),
        ),
        migrations.AlterField(
            model_name='productvariant',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variants', to='product.product', verbose_name='Parent Product'),
        ),
        migrations.AlterField(
            model_name='productvariant',
            name='sku',
            field=models.CharField(help_text='Automatically generated stock keeping unit', max_length=100, unique=True, verbose_name='SKU'),
        ),
        migrations.AlterField(
            model_name='productvariant',
            name='variant_number',
            field=models.PositiveIntegerField(editable=False, verbose_name='Variant Sequence'),
        ),
        migrations.AlterField(
            model_name='productvariantattribute',
            name='attribute_link',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='variant_attributes', to='product.productattributelink'),
        ),
        migrations.AlterField(
            model_name='productvariantattribute',
            name='custom_modifier',
            field=models.DecimalField(blank=True, decimal_places=2, help_text='Override default price modifier', max_digits=10, null=True, verbose_name='Custom Modifier'),
        ),
        migrations.AlterField(
            model_name='productvariantattribute',
            name='value',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='variant_attributes', to='product.productattributevalue'),
        ),
        migrations.AddIndex(
            model_name='productvariant',
            index=models.Index(fields=['product', 'active'], name='product_pro_product_92009c_idx'),
        ),
        migrations.AddIndex(
            model_name='productvariantattribute',
            index=models.Index(fields=['variant', 'attribute_link'], name='product_pro_variant_c2f0d0_idx'),
        ),
        migrations.AddField(
            model_name='pricechangehistory',
            name='changed_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Changed By'),
        ),
        migrations.AddField(
            model_name='pricechangehistory',
            name='product',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='price_history', to='product.product'),
        ),
        migrations.AddField(
            model_name='pricingrule',
            name='variant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='product.productvariant'),
        ),
        migrations.AddField(
            model_name='product',
            name='pricing_strategy',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product', to='product.pricingstrategy', verbose_name='Pricing Strategy'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['name'], name='product_pro_name_b60cd1_idx'),
        ),
        migrations.AddIndex(
            model_name='product',
            index=models.Index(fields=['is_template'], name='product_pro_is_temp_d096bb_idx'),
        ),
        migrations.AddField(
            model_name='purchasepricehistory',
            name='source',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='orders.purchaseorderlineitem', verbose_name='Source Order'),
        ),
        migrations.AddField(
            model_name='purchasepricehistory',
            name='variant',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='purchase_history', to='product.productvariant'),
        ),
        migrations.AddIndex(
            model_name='pricechangehistory',
            index=models.Index(fields=['product', 'timestamp'], name='product_pri_product_5b3d60_idx'),
        ),
        migrations.AddIndex(
            model_name='purchasepricehistory',
            index=models.Index(fields=['variant', '-effective_start'], name='product_pur_variant_42f1ff_idx'),
        ),
    ]
